@*@model IEnumerable<SchoolManagement.Model.Post>*@
@model PagedList.IPagedList<SilverDaleSchools.Model.Post>


@{
    ViewBag.Title = "Index";
   // Layout = "~/Views/Shared/_Layout.mobile.cshtml";
}



@{
    SilverDaleSchools.DAL.UnitOfWork work = new SilverDaleSchools.DAL.UnitOfWork();
    string UserName = User.Identity.Name;
    //List<SchoolManagement.Model.MyRole> theRole = null;
    List<SilverDaleSchools.Model.Person> thePerson = null;
    SilverDaleSchools.Model.Person theRealPerson = null;
  //  SchoolManagement.Model.SecondarySchoolStudent theRealSecondarySchoolStudent = null;
    SilverDaleSchools.Model.Person theRealPrimarySchoolStaff = null;
    string teacherClass = null;
    if (UserName != "")
    {
        int UserNameInt = Convert.ToInt32(UserName);

        //List<SchoolManagement.Model.Person> thePerson = work.PersonRepository.Get(a => a.UserID == UserNameInt).ToList();

        thePerson = work.PersonRepository.Get(a => a.UserID == UserNameInt).ToList();
        theRealPerson = thePerson[0];
      //  theRole = work.MyRoleRepository.Get(a => a.RoleName.Equals(theRealPerson.Role)).ToList();
        if (theRealPerson is SilverDaleSchools.Model.Person)
        {

            //theRealSecondarySchoolStudent = work.SecondarySchoolStudentRepository.GetByID(theRealPerson.PersonID);
            //theRealPrimarySchoolStaff = work.PrimarySchoolStaffRepository.GetByID(theRealPerson.PersonID);
            //if (theRealPrimarySchoolStaff.ClassTeacherOf != null)
            //{

            //    string[] theClass = theRealPrimarySchoolStaff.ClassTeacherOf.Split(':');
            //    if (theClass[0] != null)
            //    {
            //       teacherClass = theClass[0];
            //      //  List<Post> thePostStudent = work.PostRepository.Get(a => a.Level.Equals(teacherClass)).ToList();
            //       // thePost.AddRange(thePostStudent);
            //        //    ViewBag.Delete = "True";
            //    }


            //}
        }
    }
                
}

<h4>BLOG POSTS</h4>
<br />
<table>
    @if(!(User.IsInRole("SuperAdmin")))
    { 
    <tr><td></td> @Html.ActionLink("Create a New Post", "Create")</tr>
    }
</table>


<fieldset>
    <legend></legend>
   <table class="table table-striped table-hover table-bordered table-condensed">

        <tr>
            <th style="width:20%">
                <b>Course</b>

            </th>
            <th style="width:20%">
                <b>Title</b>
               
            </th>
            <th>
               <b>By</b>
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.PostBody)
        </th>*@
            <th style="width:20%">
               <b>Date Created</b>
               
            </th>

            <th style="width:10%">
                <b> Comments</b>
            </th>
          @*  <th></th>*@
            <th style="width:10%"> View/Comment</th>
            <th style="width:10%">
                <b> Actions</b>
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PosterName) (@Html.DisplayFor(modelItem => item.Role))
                </td>
                @*  <td>
            @Html.DisplayFor(modelItem => item.PostBody)
        </td>*@
                <td>
                    @{
            string theDate = String.Format("{0:ddd, MMM d, yyyy, h:mm:ss tt}", item.DateCreated); 
                   }
                   @theDate
                  @*  @Html.DisplayFor(modelItem => item.DateCreated)*@
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.Content)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Comments.Count)
                </td>
               @* <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.PostID })
                </td>*@
                <td>
                    @Html.ActionLink("Comment/View", "Details", new { id = item.PostID })
                </td>
              @*  <td>
                    @Html.ActionLink("Details", "Details", new { id = item.PostID })
                </td>*@
                @if (Convert.ToString(item.PosterName).Equals(User.Identity.Name)|| User.IsInRole("SuperAdmin"))
                {
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id = item.PostID })
                </td>
                }

            </tr>
        }

    </table>
</fieldset>
<table>
    <tr>
        <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount
            &nbsp;
        </td>
        @if (Model.HasPreviousPage)
        {
            <td>
                @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
            @Html.Raw("&nbsp;")
            <td>
                @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            </td>
        }
        else
        {
            <td><<
            </td>
            <td>
                @Html.Raw("&nbsp;")
                < Prev
            </td>
        }
        &nbsp;
    @if (Model.HasNextPage)
    {
        <td>
            @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>
            @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </td>
    }
    else
    {
        <td>Next >
        </td>
        <td>
            @Html.Raw("&nbsp;")
        </td>
        <td>>>
        </td>
    }
    </tr>
</table>

